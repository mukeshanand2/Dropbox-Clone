services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:15-alpine
    container_name: dropbox-postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-dropbox_clone}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dropbox-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-dropbox_clone}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Backend Service
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: dropbox-backend
    restart: always
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=${BACKEND_PORT:-5000}
      - CLIENT_ORIGIN=${CLIENT_ORIGIN:-http://localhost}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-dropbox_clone}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    volumes:
      - backend_uploads:/app/uploads
      - backend_data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dropbox-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/api/files || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: dropbox-frontend
    restart: always
    ports:
      - "${FRONTEND_PORT:-80}:80"
    networks:
      - dropbox-network
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  postgres_data:
    driver: local
  backend_uploads:
    driver: local
  backend_data:
    driver: local

networks:
  dropbox-network:
    driver: bridge
